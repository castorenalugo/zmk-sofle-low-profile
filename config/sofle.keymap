/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <29>; /* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

nice_view_spi: &spi0 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";

    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

/ {
    chosen { zmk,underglow = &led_strip; };
};

/ {
    behaviors {
        s_save: s_save {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&saveall>, <&save>;
            mods = <MOD_LCTL>;
        };
        m_dot: m_dot {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp F12>, <&kp LS(END)>;
            mods = <MOD_LSFT>;
        };
        m_coma: m_coma {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT)>, <&kp LS(HOME)>;
            mods = <MOD_LSFT>;
        };
    };

    macros {
        find: find {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(P)>,
                <&to 0>;
        };
        save: save {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(S)>,
                <&to 0>;
        };
        saveall: saveall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(K)>,
                <&macro_tap &kp S>,
                <&to 0>;
        };
        killbfr: killbfr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(W)>,
                <&to 0>;
        };
        nextbfr: nextbfr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(TAB)>,
                <&to 0>;
        };
        markall: markall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LC(A)>,
                <&to 0>;
        };
        kill: kill {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LS(END)>,
                <&macro_tap &kp LC(C)>,
                <&macro_tap &kp BSPC>;
        };
        b_kill: b_kill {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap &kp LS(HOME)>,
                <&macro_tap &kp LC(C)>,
                <&macro_tap &kp BSPC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default";
            bindings = <
&kp EQUAL  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                         &kp N6     &kp N7        &kp N8      &kp N9    &kp N0      &kp MINUS
&kp TAB    &kp Q   &kp W   &kp E   &kp R   &kp T                          &kp Y    &kp U         &kp I       &kp O     &kp P       &kp LBKT
&kp BSPC   &kp A   &kp S   &kp D   &kp F   &kp G                          &kp H      &kp J         &kp K       &kp L     &kp SEMI    &kp RET
&kp BSLH   &kp Z   &kp X   &kp C   &kp V   &kp B     &kp A     &none      &kp N      &kp M         &kp COMMA   &kp DOT   &kp SLASH     &kp SQT
                    &kp A &kp B    &kp C   &mo 1  &mo 2            &kp LSHFT  &kp SPACE     &kp D   &kp E      &kp F
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        control {
            display-name = "control";
            bindings = <
&trans  &trans    &trans     &trans   &trans     &trans                      &trans    &trans  &trans         &trans    &trans    &trans
&trans  &trans    &kp LC(X)  &kp END  &kp LS(F3) &trans                      &kp LC(V) &trans  &trans         &trans    &kp UP    &trans
&trans  &kp HOME  &kp LC(F)  &kp DEL  &kp RIGHT  &trans                      &trans    &trans  &kill          &trans    &trans    &trans
&trans  &trans    &to 3      &trans   &kp PG_DN  &kp LEFT  &trans    &trans  &kp DOWN  &trans  &kp LC(COMMA)  &LC(DOT)  &kp LC(Z) &trans
                  &trans     &trans   &trans     &trans    &trans    &trans  &trans    &trans  &trans         &trans
            >;
        };
        meta {
            display-name = "meta";
            bindings = <
&trans        &trans    &trans     &trans       &trans         &trans                          &trans    &trans   &trans   &trans  &trans  &trans
&trans        &trans    &kp LC(C)  &trans       &trans         &trans                          &trans    &trans   &trans   &trans  &trans  &trans
&kp LC(BSPC)  &trans    &trans     &kp LC(DEL)  &kp LC(RIGHT)  &trans                          &trans    &b_kill  &trans   &trans  &trans  &trans
&trans        &trans    &trans     &trans       &kp PG_UP      &kp LC(LEFT)  &trans    &trans  &trans  &trans   &m_coma  &m_dot  &trans  &trans
                        &trans     &trans       &trans         &trans        &trans    &trans  &trans    &trans   &trans   &trans
            >;
        };
         func {
            display-name = "func";
            bindings = <
&trans  &trans  &trans   &trans  &trans   &trans                    &trans    &trans  &trans    &trans  &trans  &trans
&trans  &trans  &trans   &trans  &trans   &trans                    &trans    &trans  &trans    &trans  &trans  &trans
&trans  &trans  &s_save  &trans  &find    &to 0                     &markall  &trans  &killbfr  &trans  &trans  &trans
&trans  &trans  &trans   &trans  &trans   &nextbfr  &trans    &trans  &trans    &trans  &trans    &trans  &trans  &trans
                &trans   &trans  &trans   &kp LCTRL  &trans    &trans  &trans  &trans  &trans    &trans
            >;
        };
    };
};
