/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/led/led.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <29>; /* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;

        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

nice_view_spi: &spi0 {
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi0_default>;
    pinctrl-1 = <&spi0_sleep>;
    pinctrl-names = "default", "sleep";
    cs-gpios = <&pro_micro 0 GPIO_ACTIVE_HIGH>;
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/ {
    behaviors {
        ct_p_up: ct_p_up {
            compatible = "zmk,behavior-mod-morph";
            label = "CT_P_UP";
            bindings = <&kp P>, <&kp UP_ARROW>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ct_n_down: ct_n_down {
            compatible = "zmk,behavior-mod-morph";
            label = "CT_N_DOWN";
            bindings = <&kp N>, <&kp DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ct_b_left: ct_b_left {
            compatible = "zmk,behavior-mod-morph";
            label = "CT_B_LEFT";
            bindings = <&kp B>, <&kp LEFT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        ct_f_right: ct_f_right {
            compatible = "zmk,behavior-mod-morph";
            label = "CT_F_RIGHT";
            bindings = <&kp F>, <&kp RIGHT>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        mod_ctrl: mod_ctrl {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp PAGE_DOWN>;

            mods = <MOD_LCTL>;
        };

        mod_nav: mod_nav {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mod_ctrl>, <&kp PAGE_UP>;

            mods = <MOD_LALT>;
        };

        home: home {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp A>, <&kp HOME>;

            mods = <(MOD_LCTL)>;
        };

        end: end {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp E>, <&kp END>;

            mods = <(MOD_LCTL)>;
        };

        del: del {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp DEL>;

            mods = <(MOD_LCTL)>;
        };

        m_cut: m_cut {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp LG(X)>;

            mods = <(MOD_LCTL)>;
        };

        m_cut_copy: m_cut_copy {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&m_cut>, <&kp LG(C)>;

            mods = <MOD_LALT>;
        };

        m_yank: m_yank {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp LG(V)>;

            mods = <(MOD_LCTL)>;
        };

        m_undo: m_undo {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp LG(Z)>;

            mods = <(MOD_LCTL)>;
        };

        w_cut: w_cut {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp W>, <&kp LC(X)>;

            mods = <(MOD_LCTL)>;
        };

        w_cut_copy: w_cut_copy {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&w_cut>, <&kp LC(C)>;

            mods = <MOD_LALT>;
        };

        w_yank: w_yank {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp Y>, <&kp LC(V)>;

            mods = <(MOD_LCTL)>;
        };

        w_undo: w_undo {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&kp LC(Z)>;

            mods = <(MOD_LCTL)>;
        };
    };
    macros {
        to_folder: to_folder {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_1>,
                <&macro_release>,
                <&kp NUMBER_1>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_emacs: to_emacs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_2>,
                <&macro_release>,
                <&kp NUMBER_2>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 1>,
                <&macro_release>,
                <&to 1>;
        };

        to_browser: to_browser {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_3>,
                <&macro_release>,
                <&kp NUMBER_3>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_terminal: to_terminal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_4>,
                <&macro_release>,
                <&kp NUMBER_4>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_notes: to_notes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_5>,
                <&macro_release>,
                <&kp NUMBER_5>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        to_chat: to_chat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI>,
                <&macro_press>,
                <&kp NUMBER_6>,
                <&macro_release>,
                <&kp NUMBER_6>,
                <&macro_release>,
                <&kp LGUI>,
                <&macro_press>,
                <&to 0>,
                <&macro_release>,
                <&to 0>;
        };

        p1: p1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(A) &kp LS(C) &kp N1 &kp N0 &kp N8 &kp A &kp L &kp L &kp I &kp E &kp D &kp POUND &kp DLLR>;
            label = "P1";
        };

        p2: p2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(J) &kp E &kp R &kp G &kp O &kp T &kp A &kp S &kp S &kp N1 &kp N2 &kp N3 &kp EXCL &kp EXCL>;
            label = "P2";
        };
    };
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <27 32>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <20 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default";
            bindings = <
&kp ESC   &kp N1  &kp N2       &kp N3   &kp N4              &kp N5                                 &kp N6       &kp N7    &kp N8     &kp N9   &kp N0   &kp RET
&trans    &kp Q   &w_cut_copy  &end     &kp R               &lt 3 T                                &w_yank      &kp U     &kp I      &kp O       &ct_p_up  &trans
&trans    &home   &kp S        &del     &ct_f_right         &kp G                                  &kp H        &kp J     &kp K      &kp L       &kp SEMI  &trans
&trans    &kp Z   &kp X        &kp C    &mod_nav            &ct_b_left    &trans        &trans     &ct_n_down   &kp M     &kp COMMA  &kp PERIOD  &w_undo   &trans
                  &kp MINUS    &kp BSLH &mt LEFT_WIN        &kp LEFT_ALT  &kp LCTRL     &kp LSHFT  &lt 2 SPACE  &lt 3     &kp DEL    &kp LGUI
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

    };
};
